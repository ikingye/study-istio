<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>首页 on Istio 学习笔记</title>
    <link>https://ikingye.github.io/study-istio/</link>
    <description>Recent content in 首页 on Istio 学习笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://ikingye.github.io/study-istio/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mixer</title>
      <link>https://ikingye.github.io/study-istio/docs/basic/arch/components/mixer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/basic/arch/components/mixer/</guid>
      <description>Mixer 基础 #  Mixer 已弃用。
Mixer 所提供的功能已迁移至 Envoy 代理中。 在 Istio 中对 Mixer 的支持将截止到 Istio 1.7 发行版。
请参考 Telemetry V2，它取代了 Mixer 遥测。</description>
    </item>
    
    <item>
      <title>Pilot</title>
      <link>https://ikingye.github.io/study-istio/docs/basic/arch/components/pilot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/basic/arch/components/pilot/</guid>
      <description>Pilot 基础 #  参考：
 深入理解 Istio 核心组件之 Pilot 深入解读 Service Mesh 背后的技术细节  </description>
    </item>
    
    <item>
      <title>Citadel</title>
      <link>https://ikingye.github.io/study-istio/docs/basic/arch/components/citadel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/basic/arch/components/citadel/</guid>
      <description>Citadel #  </description>
    </item>
    
    <item>
      <title>Galley</title>
      <link>https://ikingye.github.io/study-istio/docs/basic/arch/components/galley/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/basic/arch/components/galley/</guid>
      <description>Galley 基础 #  </description>
    </item>
    
    <item>
      <title>3.1.1 Istio 源码结构</title>
      <link>https://ikingye.github.io/study-istio/docs/code/istio/structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/code/istio/structure/</guid>
      <description>Istio 源码结构 #  1.6.5 $ tree -L 2 . ├── BUGS-AND-FEATURE-REQUESTS.md ├── CODEOWNERS ├── CONTRIBUTING.md ├── LICENSE ├── Makefile ├── Makefile.core.mk ├── Makefile.overrides.mk ├── README.md ├── SUPPORT.md ├── bin │ ├── check_no_modify.sh │ ├── check_samples.sh │ ├── codecov.sh │ ├── codecov_diff.sh │ ├── diff_yaml.py │ ├── init.sh │ ├── mixer_codegen.sh │ ├── nomodify.md5 │ ├── protoc.sh │ ├── update_crds.sh │ ├── update_deps.sh │ └── update_no_modify.sh ├── codecov.skip ├── codecov.threshold ├── common │ ├── Makefile.</description>
    </item>
    
    <item>
      <title>4.1 教程</title>
      <link>https://ikingye.github.io/study-istio/docs/appendix/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/appendix/tutorial/</guid>
      <description>Istio 教程 #  基础 #   katacoda: 使用 istioctl 安装 istio 绿色记忆: Istio 学习笔记 绿色记忆: Istio Pilot 与 Envoy 的交互机制解读  进阶 #  </description>
    </item>
    
    <item>
      <title>Jaeger</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/tracing/jaeger/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/tracing/jaeger/</guid>
      <description>Jaeger #  Jaeger \ˈyā-gər\
jaegertracing/jaeger CNCF Jaeger, a Distributed Tracing Platform https://www.jaegertracing.io/</description>
    </item>
    
    <item>
      <title>Kong Ingress</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/ingress/kong-ingress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/ingress/kong-ingress/</guid>
      <description>Kong Ingress #  Kong/kubernetes-ingress-controller Kong for Kubernetes</description>
    </item>
    
    <item>
      <title>LDS</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/envoy/xds/lds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/envoy/xds/lds/</guid>
      <description>LDS #  监听器发现服务（LDS）是一个可选的 API，Envoy 将调用它来动态获取监听器。Envoy 将协调 API 响应，并根据需要添加、修改或删除已知的监听器。
监听器更新的语义如下：
 每个监听器必须有一个独特的名字。如果没有提供名称，Envoy 将创建一个 UUID。要动态更新的监听器，管理服务必须提供监听器的唯一名称。 当一个监听器被添加，在参与连接处理之前，会先进入 “预热” 阶段。例如，如果监听器引用 RDS 配置，那么在监听器迁移到 “active” 之前，将会解析并提取该配置。 监听器一旦创建，实际上就会保持不变。因此，更新监听器时，会创建一个全新的监听器（使用相同的侦听套接字）。新增加的监听者都会通过上面所描述的相同 “预热” 过程。 当更新或删除监听器时，旧的监听器将被置于 “draining（逐出）” 状态，就像整个服务重新启动时一样。监听器移除之后，该监听器所拥有的连接，经过一段时间优雅地关闭（如果可能的话）剩余的连接。逐出时间通过 --drain-time-s 选项设置。  注意
 任何在 Envoy 配置中静态定义的监听器都不能通过 LDS API 进行修改或删除。
 </description>
    </item>
    
    <item>
      <title>OpenResty</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/openresty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/openresty/</guid>
      <description>OpenResty #  openresty/openresty 参考：
 OpenResty 究竟解决了什么痛点？   教程 #  参考：
 Programming OpenResty - 章亦春 OpenResty 最佳实践  </description>
    </item>
    
    <item>
      <title>Pilot</title>
      <link>https://ikingye.github.io/study-istio/docs/code/istio/pilot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/code/istio/pilot/</guid>
      <description>Pilot #  若无特别说明，本文是根据 Istio 1.6.5 进行分析。  pilot discovery #  函数调用栈 #   NewServer  initConfigController  makeKubeConfigController  (add schema) collections.Pilot.All() NewClient NewController  (add stores for CRD kinds) addInformer  newCacheHandler  informer := cache.NewSharedIndexInformer(&amp;hellip;) informer.AddEventHandler  queue.Push(onEvent)           s.ConfigStores = append(s.ConfigStores, configController) aggregateConfigController, err := configaggregate.MakeCache(s.ConfigStores) s.configController = aggregateConfigController addStartFunc   initServiceControllers  NewServiceDiscovery  RegisterEventHandler: 注册 serviceEntryKind 与 workloadEntryKind 的 handler     initDiscoveryService  initEventHandlers  定义 handler  s.</description>
    </item>
    
    <item>
      <title>安装</title>
      <link>https://ikingye.github.io/study-istio/docs/basic/quick/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/basic/quick/install/</guid>
      <description>Istio 安装 #  快速安装（适合新人） #   Download and install Istio Deploy the sample application Open the application to outside traffic View the dashboard  使用 Istioctl 进行安装 #  下载 Istio release #  [完成平台设置](platform-specific setup) #  Check the Requirements for Pods and Services #  Install Istio using the default profile #  export INGRESS_HOST=$(kubectl get po -l istio=ingressgateway -n istio-system -o jsonpath=&amp;#39;{.items[0].status.hostIP}&amp;#39;) export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath=&amp;#39;{.</description>
    </item>
    
    <item>
      <title>4.2 面试题</title>
      <link>https://ikingye.github.io/study-istio/docs/appendix/interview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/appendix/interview/</guid>
      <description>Istio 面试题 #  基础题 #  进阶题 #  </description>
    </item>
    
    <item>
      <title>Ambassador</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/ingress/ambassador/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/ingress/ambassador/</guid>
      <description>Ambassador #  datawire/ambassador Open source Kubernetes-native API gateway for microservices built on the Envoy Proxy</description>
    </item>
    
    <item>
      <title>CDS</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/envoy/xds/cds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/envoy/xds/cds/</guid>
      <description>CDS #  </description>
    </item>
    
    <item>
      <title>Traefik</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/ingress/traefik/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/ingress/traefik/</guid>
      <description>Traefik #  traefik/traefik The Cloud Native Application Proxy https://traefik.io/</description>
    </item>
    
    <item>
      <title>4.3 关注项目</title>
      <link>https://ikingye.github.io/study-istio/docs/appendix/attention/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/appendix/attention/</guid>
      <description>关注项目 #  istio/istio #  Connect, secure, control, and observe services. https://istio.io
envoyproxy/envoy #  Cloud-native high-performance edge/middle/service proxy https://www.envoyproxy.io
kiali/kiali #  Kiali project, observability for the Istio service mesh
mosn/mosn #  MOSN is a cloud native proxy for edge or service mesh. https://mosn.io
rancher/rio Application Deployment Engine for Kubernetes https://rio.io
其他 #  kubernetes/kubernetes #  Production-Grade Container Scheduling and Management https://kubernetes.io
openzipkin/zipkin #  Zipkin is a distributed tracing system https://zipkin.</description>
    </item>
    
    <item>
      <title>Contour</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/ingress/contour/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/ingress/contour/</guid>
      <description>Contour #  projectcontour/contour Contour is a Kubernetes ingress controller using Envoy proxy.</description>
    </item>
    
    <item>
      <title>EDS</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/envoy/xds/eds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/envoy/xds/eds/</guid>
      <description>EDS #  </description>
    </item>
    
    <item>
      <title>Istio 熔断</title>
      <link>https://ikingye.github.io/study-istio/docs/code/istio/circuit-break/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/code/istio/circuit-break/</guid>
      <description>Istio 熔断 #  </description>
    </item>
    
    <item>
      <title>Istio 限流</title>
      <link>https://ikingye.github.io/study-istio/docs/code/istio/rate-limit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/code/istio/rate-limit/</guid>
      <description>Istio 限流 #  </description>
    </item>
    
    <item>
      <title>SkyWalking</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/tracing/skywalking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/tracing/skywalking/</guid>
      <description>SkyWalking #  apache/skywalking APM, Application Performance Monitoring System https://skywalking.apache.org/</description>
    </item>
    
    <item>
      <title>Gloo</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/gloo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/gloo/</guid>
      <description>Gloo #  solo-io/gloo The Feature-rich, Kubernetes-native, Next-Generation API Gateway Built on Envoy</description>
    </item>
    
    <item>
      <title>RDS</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/envoy/xds/rds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/envoy/xds/rds/</guid>
      <description>RDS #  </description>
    </item>
    
    <item>
      <title>Zipkin</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/tracing/zipkin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/tracing/zipkin/</guid>
      <description>Zipkin #  openzipkin/zipkin Zipkin is a distributed tracing system https://zipkin.io/</description>
    </item>
    
    <item>
      <title>版本</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/envoy/version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/envoy/version/</guid>
      <description>Envoy 版本 #  参考： https://www.envoyproxy.io/docs/envoy/v1.15.0/version_history/version_history
1.17 #  1.17.0 #  1.16 #  1.16.0 (2020-10-08) #   1.15 #  1.15.0 (2020-07-06) #   1.14 #  1.14.3 (2020-06-30) #  1.14.2 (2020-06-08) #  1.14.0 (2020-04-08) #   1.13 #  1.13.3 (2020-06-30) #  1.13.0 (2020-01-20) #   1.12 #  1.12.5 (2020-06-30) #  1.12.1 (2019-11-08) #   1.5 (2017-12-04) #   1.</description>
    </item>
    
    <item>
      <title>版本</title>
      <link>https://ikingye.github.io/study-istio/docs/basic/other/version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/basic/other/version/</guid>
      <description>Istio 版本 #  istio/istio 参考： https://istio.io/news/releases/
1.7 #   1.6 #  1.6.5 (2020-07-09) #  1.6.0 (2020-05-21) #   1.5 #  1.5.8 (2020-07-09) #  1.5.0 (2020-03-05) #   1.4 #  1.4.0 (2019-11-14) #   1.3 #   1.2 #   1.1 #   1.0 #    0.x #  0.8 (2018-06-01) #  0.2 (2017-10-10) #  0.</description>
    </item>
    
    <item>
      <title>Istio Ingress</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/ingress/istio-ingress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/ingress/istio-ingress/</guid>
      <description>Istio Ingress #  </description>
    </item>
    
    <item>
      <title>kubernetes/ingress-nginx</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/ingress/ingress-nginx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/ingress/ingress-nginx/</guid>
      <description>NGINX Ingress Controller #  kubernetes/ingress-nginx NGINX Ingress Controller for Kubernetes https://kubernetes.github.io/ingress-nginx/</description>
    </item>
    
    <item>
      <title>haproxy</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/haproxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/haproxy/</guid>
      <description>Haproxy #  haproxy/haproxy HAProxy Load Balancer&amp;rsquo;s development branch (mirror of git.haproxy.org) https://git.haproxy.org/</description>
    </item>
    
    <item>
      <title>Haproxy Ingress</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/ingress/haproxy-ingress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/ingress/haproxy-ingress/</guid>
      <description>Haproxy Ingress #  jcmoraisjr/haproxy-ingress #  jcmoraisjr/haproxy-ingress </description>
    </item>
    
    <item>
      <title>MOSN</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/mosn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/mosn/</guid>
      <description>MOSN #  mosn/mosn MOSN is a cloud native proxy for edge or service mesh. https://mosn.io</description>
    </item>
    
    <item>
      <title>2.7 测试</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/test/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/test/test/</guid>
      <description>测试 #  open-policy-agent/conftest #  Write tests against structured configuration data using the Open Policy Agent Rego query language</description>
    </item>
    
    <item>
      <title>Dapr</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/dapr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/dapr/</guid>
      <description>Dapr #  dapr/dapr Dapr is a portable, serverless, event-driven runtime that makes it easy for developers to build resilient, stateless and stateful microservices that run on the cloud and edge and embraces the diversity of languages and developer frameworks.</description>
    </item>
    
    <item>
      <title>LightStep</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/tracing/lightstep/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/tracing/lightstep/</guid>
      <description>LightStep #  https://lightstep.com/
lightstep-tracer-go #  lightstep/lightstep-tracer-go </description>
    </item>
    
    <item>
      <title>BFE</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/bfe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/bfe/</guid>
      <description>BFE #  baidu/bfe Baidu Front End 百度统一前端
统一的百度七层（HTTP）流量接入平台
BFE 之前的百度前端接入架构 #  流量从 BGW 接入之后直接到达了产品线的前端服务器， 这些服务器种类繁多，几乎包涵了现在流行的各种 webserver，比如 nginx,apache,lighttpd 等， 不同的服务器经过后端不同业务逻辑的处理之后打印日志内容并且将响应发送给用户。
开发成本高 #  如果前端多个产品线需要实现一个通用功能，比如防攻击或者 IP 地域识别，需要开发不同的 webserver 模块，虽然每个模块的功能一样，但实现方式完全不同，所以存在一定的重复开发和人力资源浪费。
维护成本高 #  不同的产品线和模块都需要一定的人力来维护。前端接入服务器类型多样，实现和原理各异，出现问题的概率大，Nginx, apache 等服务器比较稳定，高效，但是如果产品线出现强烈的个性化业务需求或者严重 BUG，开源社区很难提供及时有效的技术支持。
数据和策略共享的成本高 #  产品线间维护不同的前端接入模块，策略和经验很难做到有效的分享。
技术积累难 #  由于产品线间沟通和分享的成本大，很多经验和成果并没有得到有效的积累。
 BFE 架构 #  BFE 是一个七层接入系统。 它的最基本工作就是接收用户数据，解析 HTTP 请求，对内容进行过滤和分析之后再转发给后端产品线。
BFE 最基本的工作就是从 BGW/BVS 接入流量并将流量转发给产品线的前端 webserver 或者其他接入模块，最后接收后端 server 的内容并回复给外部用户。
反向代理服务器 #  BFE 本质上是一个反向代理服务器，每天承接百度数百亿的流量，高峰期的集群 QPS 有一百多万。 在如此大的流量压力环境中，服务器的处理性能至关重要。 BFE 采用现在业界流行的多进程全异步非阻塞事件驱动模型， 但由于业务功能繁多，产品线策略及规则复杂，任何一个开源的代理服务器比如 nginx, squid, varnish 的性能都很难满足需求。 BFE 本身也需要不断优化，降低系统资源开销，提升处理性能。</description>
    </item>
    
    <item>
      <title>Cilium</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/cilium/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/cilium/</guid>
      <description>Cilium #  cilium/cilium eBPF-based Networking, Security, and Observability</description>
    </item>
    
    <item>
      <title>Consul</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/consul/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/consul/</guid>
      <description>Consul #  hashicorp/consul Consul is a distributed, highly available, and data center aware solution to connect and configure applications across dynamic, distributed infrastructure. https://www.consul.io/</description>
    </item>
    
    <item>
      <title>Traefik Mesh</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/traefik-mesh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/traefik-mesh/</guid>
      <description>Traefik Mesh #  traefik/mesh Consul is a distributed, highly available, and data center aware solution to connect and configure applications across dynamic, distributed infrastructure. https://www.consul.io/</description>
    </item>
    
    <item>
      <title>nginxinc/kubernetes-ingress</title>
      <link>https://ikingye.github.io/study-istio/docs/advanced/eco/other/ingress/kubernetes-ingress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/advanced/eco/other/ingress/kubernetes-ingress/</guid>
      <description>NGINX Ingress Controller #  nginxinc/kubernetes-ingress NGINX and NGINX Plus Ingress Controllers for Kubernetes https://docs.nginx.com/nginx-ingress-controller/
nginxinc/kubernetes-ingress vs kubernetes/ingress-nginx #  参考：
 Differences Between nginxinc/kubernetes-ingress and kubernetes/ingress-nginx Ingress Controllers  </description>
    </item>
    
    <item>
      <title>FAQ</title>
      <link>https://ikingye.github.io/study-istio/docs/basic/quick/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/basic/quick/faq/</guid>
      <description>FAQ #  Istio 如何实现 Sidecar 注入？ #  Istio 如何实现流量管理？ #  如何拦截流量 intercept traffic
Istio 是在哪一层实现流量管理？为什么要在那一层？ #  Layer7 routing
Istio 如何实现 mTLS 认证？ #  </description>
    </item>
    
    <item>
      <title>Kiali</title>
      <link>https://ikingye.github.io/study-istio/docs/basic/quick/kiali/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-istio/docs/basic/quick/kiali/</guid>
      <description>Kiali #  kiali/kiali Kiali project, observability for the Istio service mesh</description>
    </item>
    
  </channel>
</rss>